
 
hostnamectl set-hostname master-node
sudo cat <<EOF>> /etc/hosts
192.168.25.80 master-node
192.168.25.81 worker-node-1
192.168.25.84 worker-node-2
EOF

------------Disable SELinux
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
reboot

------------Disable Swap
swapoff -a
vi /etc/fstab
lvremove /dev/centos/swap

vi /etc/default/grub
--Remove the rd.lvm.lv=centos/swap from the GRUB_CMDLINE_LINUX line.
grub2-mkconfig -o /boot/grub2/grub.cfg

----------------Bridging Container traffics
cat <<EOF> /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl -p /etc/sysctl.d/k8s.conf

---------------------Firewall and Ports

---for master
firewall-cmd --permanent --add-port={6443,10250,10251,10252,2379-2380}/tcp
firewall-cmd --reload
firewall-cmd --list-all
modprobe br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

----for node

firewall-cmd --permanent --add-port={10250,30000-32767}/tcp
firewall-cmd --reload
firewall-cmd --list-all
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
swapoff -a
---------Adding Repositories

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF


-------Starting with Installation



yum install kubeadm docker -y 

####yum install -y kubelet kubeadm kubectl docker.io --disableexcludes=kubernetes

systemctl enable kubelet
systemctl start kubelet
systemctl enable docker
systemctl start docker
systemctl enable --now kubelet

----------------Initialize the kubernetes Cluster


kubeadm init --apiserver-advertise-address=192.168.25.80 --pod-network-cidr=10.244.0.0/16


mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config


  
wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml 
 
  
sed 's/vxlan/host-gw/' -i kube-flannel.yml 
 
 
kubectl create -f kube-flannel.yml 
 


------------start Calico

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
https://docs.projectcalico.org/v3.14/manifests/calico.yaml


watch kubectl get all --all-namespaces -o wide



rm -rf /var/lib/cni/ /var/lib/calico/ /var/lib/kubelet/ /var/lib/etcd/ /etc/kubernetes/ /etc/cni/ 
rm $HOME/.kube/config
ip route flush proto bird
ip link list | grep cali | awk '{print $2}' | cut -c 1-15 | xargs -I {} ip link delete {}
modprobe -r ipip
rm /etc/cni/net.d/10-calico.conflist && rm /etc/cni/net.d/calico-kubeconfig
iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X


